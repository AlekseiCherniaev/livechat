from typing import Protocol, Any
from uuid import UUID

from app.core.constants import BroadcastEventType
from app.domain.entities.user import User
from app.domain.entities.websocket_session import WebSocketSession


class ConnectionPort(Protocol):
    async def connect(self, session: WebSocketSession) -> None: ...

    async def disconnect(self, session_id: UUID) -> None: ...

    async def broadcast_event(
        self, room_id: UUID, event_type: BroadcastEventType, payload: dict[str, Any]
    ) -> None: ...

    async def disconnect_user_from_room(self, user_id: UUID, room_id: UUID) -> None: ...

    async def list_users_in_room(self, room_id: UUID) -> list[User]: ...

    async def update_ping(self, session_id: UUID) -> None: ...

    async def get_active_sessions(self, room_id: UUID) -> list[WebSocketSession]: ...

    async def is_user_online(self, user_id: UUID) -> bool: ...
